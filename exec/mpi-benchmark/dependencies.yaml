name: cluster_is_prepared
spec:
  requirements:
  - has_mpijobs
  - has_volcano
  - in_mpi_namespace
  - has_mpi_base_image
  - has_mpi_osu_image
---
name: has_mpijobs
spec:
  tests:
  - name: has_mpi_crd
    type: shell
    spec: oc get -oname crd/mpijobs.kubeflow.org
  install:
  - name: install_nfd
    type: shell
    spec: |
      oc apply -f
         https://raw.githubusercontent.com/kubeflow/mpi-operator/v0.3.0/deploy/v2beta1/mpi-operator.yaml
  - name: Fix MPI-Operator image
    type: shell
    spec: |
      oc set image -n mpi-operator deployment.apps/mpi-operator mpi-operator=docker.io/mpioperator/mpi-operator:0.3.0
---
name: has_volcano
spec:
  tests:
  - name: has_podgroupd_crd
    type: shell
    spec: oc get -oname crd/podgroups.scheduling.volcano.sh
  install:
  - name: install_nfd
    type: shell
    spec: |
      oc apply -f
         https://raw.githubusercontent.com/kubeflow/mpi-operator/v0.3.0/deploy/v2beta1/mpi-operator.yaml
  - name: Fix MPI-Operator image
    type: shell
    spec: |
      oc apply -f
         https://raw.githubusercontent.com/volcano-sh/volcano/master/installer/volcano-development.yaml
---
name: in_mpi_namespace
spec:
  tests:
  - name: in_mpi_namespace
    type: shell
    spec: test $(oc project -q) == mpi-benchmark
  install:
  - name: goto_mpi_namespace
    type: shell
    spec: |
      oc new-project mpi-benchmark 2>/dev/null;
      oc project mpi-benchmark;
      oc adm policy add-scc-to-user privileged -z default -n mpi-benchmark;
      oc adm policy add-scc-to-user anyuid -z  default
---
name: has_mpi_base_image
spec:
  requirements:
  - in_mpi_namespace
  tests:
  - name: has_base_image
    type: shell
    spec: oc get istag/mpi-bench:base
  install:
  - name: build_base_image
    type: ansible
    spec:
    - name: Set local imagebuild name
      set_fact:
        buildconfig_file: exec/mpi-benchmark/setup/003_osu-bench.buildconfig.yaml

    - name: Delete the image helper builder manifest, if any
      command: oc delete -f "{{ buildconfig_file }}" --ignore-not-found=true

    - name: Apply the image helper builder manifest
      command: oc apply -f "{{ buildconfig_file }}"

    - name: Wait for the helper image to be built
      command:
        oc get pod -lopenshift.io/build.name
                 -ocustom-columns=phase:status.phase
                 --no-headers
      register: wait_buildconfig
      until: "'Succeeded' in wait_buildconfig.stdout or 'Failed' in wait_buildconfig.stdout or 'Error' in wait_buildconfig.stdout"
      retries: 40
      delay: 30

    - name: Fail if the buildconfig failed to be built
      when: "'Failed' in wait_buildconfig.stdout or 'Error' in wait_buildconfig.stdout"
      fail: msg="The buildconfig {{ buildconfig_file }} failed to build"

---
name: has_mpi_osu_image
spec:
  requirements:
  - in_mpi_namespace
  tests:
  - name: has_base_image
    type: shell
    spec: oc get istag/mpi-bench:osu-bench
  install:
  - name: build_osu_image
    type: ansible
    spec:
    - name: Set local imagebuild name
      set_fact:
        buildconfig_file: exec/mpi-benchmark/setup/003_osu-bench.buildconfig.yaml

    - name: Delete the image helper builder manifest, if any
      command: oc delete -f "{{ buildconfig_file }}" --ignore-not-found=true

    - name: Apply the image helper builder manifest
      command: oc apply -f "{{ buildconfig_file }}"

    - name: Wait for the helper image to be built
      command:
        oc get pod -lopenshift.io/build.name
                 -ocustom-columns=phase:status.phase
                 --no-headers
      register: wait_buildconfig
      until: "'Succeeded' in wait_buildconfig.stdout or 'Failed' in wait_buildconfig.stdout or 'Error' in wait_buildconfig.stdout"
      retries: 40
      delay: 30

    - name: Fail if the buildconfig failed to be built
      when: "'Failed' in wait_buildconfig.stdout or 'Error' in wait_buildconfig.stdout"
      fail: msg="The buildconfig {{ buildconfig_file }} failed to build"
